[project]
name = "docling-binary"
version = "0.1.0"
description = ""
authors = [
    { name = "Felix Schultz (TM9657 GmbH)", email = "felix.schultz@good-co.de" },
]
readme = "README.md"
requires-python = ">=3.9,<3.14"
dependencies = [
    "docling (>=2.33.0,<3.0.0)",
    "pyinstaller (>=6.13.0,<7.0.0)",
]

[tool.poetry]
package-mode = false

[tool.poetry.group.cuda]
optional = true

# https://github.com/pytorch/pytorch/blob/main/RELEASE.md#release-compatibility-matrix
[tool.poetry.group.cuda.dependencies]
torch = { version = "^2.7", source = "pytorch-cuda", markers = "extra=='cuda' and extra!='cpu' and extra!='blank'" }
torchvision = { version = "^0.22", source = "pytorch-cuda", markers = "extra=='cuda' and extra!='cpu' and extra!='blank'" }

[tool.poetry.group.blank]
optional = true

[tool.poetry.group.blank.dependencies]
torch = { version = "==2.2.2", source = "pytorch-cuda", markers = "extra=='blank' and extra!='cpu' and extra!='cuda'" }
torchvision = { version = "==0.17.2", source = "pytorch-cuda", markers = "extra=='blank' and extra!='cpu' and extra!='cuda'" }

[tool.poetry.group.cpu]
optional = true

[tool.poetry.group.cpu.dependencies]
torch = { version = "^2.7", source = "pytorch-cpu", markers = "extra=='cpu' and extra!='blank' and extra!='cuda'" }
torchvision = { version = "^0.22", source = "pytorch-cpu", markers = "extra=='cpu' and extra!='blank' and extra!='cuda'" }

[[tool.poetry.source]]
name = "pytorch-cuda"
priority = "explicit"
url = "https://pypi.org/simple/"

[[tool.poetry.source]]
name = "pytorch-cpu"
priority = "explicit"
url = "https://download.pytorch.org/whl/cpu"

 [tool.poetry.extras]
cpu  = ["torch", "torchvision"]
cuda = ["torch", "torchvision"]
blank = ["torch", "torchvision"]

 [project.optional-dependencies]
cpu  = ["torch", "torchvision"]
cuda = ["torch", "torchvision"]
blank = ["torch", "torchvision"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
build = "poetry run pyinstaller --onefile --name flow-docling --noconfirm --upx-dir='$(which upx | xargs dirname)' --collect-all docling_parse main.py"